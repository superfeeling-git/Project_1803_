//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApp2
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Project_1803Entities : DbContext
    {
        public Project_1803Entities()
            : base("name=Project_1803Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admin { get; set; }
        public virtual DbSet<News> News { get; set; }
        public virtual DbSet<NewsClass> NewsClass { get; set; }
        public virtual DbSet<Photo> Photo { get; set; }
        public virtual DbSet<Picture> Picture { get; set; }
        public virtual DbSet<Role> Role { get; set; }
        public virtual DbSet<SysClass> SysClass { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<SysRole> SysRole { get; set; }
        public virtual DbSet<Test> Test { get; set; }
    
        public virtual ObjectResult<f__PageList__OFFSET_Result> f__PageList__OFFSET(Nullable<int> classId, string title, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalCount, ObjectParameter pageCount)
        {
            var classIdParameter = classId.HasValue ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<f__PageList__OFFSET_Result>("f__PageList__OFFSET", classIdParameter, titleParameter, pageIndexParameter, pageSizeParameter, totalCount, pageCount);
        }
    
        public virtual ObjectResult<f__Photo_PageList__OFFSET_Result> f__Photo_PageList__OFFSET(Nullable<int> classId, string photoName, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalCount, ObjectParameter pageCount)
        {
            var classIdParameter = classId.HasValue ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(int));
    
            var photoNameParameter = photoName != null ?
                new ObjectParameter("PhotoName", photoName) :
                new ObjectParameter("PhotoName", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<f__Photo_PageList__OFFSET_Result>("f__Photo_PageList__OFFSET", classIdParameter, photoNameParameter, pageIndexParameter, pageSizeParameter, totalCount, pageCount);
        }
    }
}
